/*
 * Document Generator API
 * API for generating PDF documents from templates.  This microservice provides endpoints for generating various types of insurance documents in PDF format using predefined templates and data models. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@autosure.co.nz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nz.co.turners.autosure.documentgenerator.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * MbiQuoteRequest
 */
@JsonPropertyOrder({
  MbiQuoteRequest.JSON_PROPERTY_QUOTATION_NUMBER,
  MbiQuoteRequest.JSON_PROPERTY_QUOTATION_DATE,
  MbiQuoteRequest.JSON_PROPERTY_COVER,
  MbiQuoteRequest.JSON_PROPERTY_COVER_PERIOD,
  MbiQuoteRequest.JSON_PROPERTY_MAX_CLAIM,
  MbiQuoteRequest.JSON_PROPERTY_ADDITIONAL_COVERS,
  MbiQuoteRequest.JSON_PROPERTY_CONSUMABLE_ITEMS,
  MbiQuoteRequest.JSON_PROPERTY_REPATRIATION_COSTS,
  MbiQuoteRequest.JSON_PROPERTY_ACCOMMODATION_TRAVEL,
  MbiQuoteRequest.JSON_PROPERTY_ROADSIDE_ASSISTANCE,
  MbiQuoteRequest.JSON_PROPERTY_ELECTRIC_PACKAGE,
  MbiQuoteRequest.JSON_PROPERTY_REGISTRATION,
  MbiQuoteRequest.JSON_PROPERTY_VIN,
  MbiQuoteRequest.JSON_PROPERTY_MAKE,
  MbiQuoteRequest.JSON_PROPERTY_MODEL,
  MbiQuoteRequest.JSON_PROPERTY_VARIANT,
  MbiQuoteRequest.JSON_PROPERTY_VEHICLE_VALUE,
  MbiQuoteRequest.JSON_PROPERTY_FUEL_TYPE,
  MbiQuoteRequest.JSON_PROPERTY_CC_RATING,
  MbiQuoteRequest.JSON_PROPERTY_YEAR,
  MbiQuoteRequest.JSON_PROPERTY_ODOMETER,
  MbiQuoteRequest.JSON_PROPERTY_MODIFICATIONS,
  MbiQuoteRequest.JSON_PROPERTY_MODIFICATION_DETAILS,
  MbiQuoteRequest.JSON_PROPERTY_EXCLUSIONS,
  MbiQuoteRequest.JSON_PROPERTY_EXCLUSION_DETAILS,
  MbiQuoteRequest.JSON_PROPERTY_EXCESS_AMOUNT,
  MbiQuoteRequest.JSON_PROPERTY_TOTAL_PREMIUM,
  MbiQuoteRequest.JSON_PROPERTY_GST,
  MbiQuoteRequest.JSON_PROPERTY_AGENT_NAME,
  MbiQuoteRequest.JSON_PROPERTY_AGENT_NUMBER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MbiQuoteRequest {
  public static final String JSON_PROPERTY_QUOTATION_NUMBER = "quotationNumber";
  private String quotationNumber;

  public static final String JSON_PROPERTY_QUOTATION_DATE = "quotationDate";
  private String quotationDate;

  public static final String JSON_PROPERTY_COVER = "cover";
  private String cover;

  public static final String JSON_PROPERTY_COVER_PERIOD = "coverPeriod";
  private String coverPeriod;

  public static final String JSON_PROPERTY_MAX_CLAIM = "maxClaim";
  private String maxClaim;

  public static final String JSON_PROPERTY_ADDITIONAL_COVERS = "additionalCovers";
  private String additionalCovers;

  public static final String JSON_PROPERTY_CONSUMABLE_ITEMS = "consumableItems";
  private String consumableItems;

  public static final String JSON_PROPERTY_REPATRIATION_COSTS = "repatriationCosts";
  private String repatriationCosts;

  public static final String JSON_PROPERTY_ACCOMMODATION_TRAVEL = "accommodationTravel";
  private String accommodationTravel;

  public static final String JSON_PROPERTY_ROADSIDE_ASSISTANCE = "roadsideAssistance";
  private String roadsideAssistance;

  public static final String JSON_PROPERTY_ELECTRIC_PACKAGE = "electricPackage";
  private String electricPackage;

  public static final String JSON_PROPERTY_REGISTRATION = "registration";
  private String registration;

  public static final String JSON_PROPERTY_VIN = "vin";
  private String vin;

  public static final String JSON_PROPERTY_MAKE = "make";
  private String make;

  public static final String JSON_PROPERTY_MODEL = "model";
  private String model;

  public static final String JSON_PROPERTY_VARIANT = "variant";
  private String variant;

  public static final String JSON_PROPERTY_VEHICLE_VALUE = "vehicleValue";
  private String vehicleValue;

  public static final String JSON_PROPERTY_FUEL_TYPE = "fuelType";
  private String fuelType;

  public static final String JSON_PROPERTY_CC_RATING = "ccRating";
  private String ccRating;

  public static final String JSON_PROPERTY_YEAR = "year";
  private String year;

  public static final String JSON_PROPERTY_ODOMETER = "odometer";
  private String odometer;

  public static final String JSON_PROPERTY_MODIFICATIONS = "modifications";
  private String modifications;

  public static final String JSON_PROPERTY_MODIFICATION_DETAILS = "modificationDetails";
  private String modificationDetails;

  public static final String JSON_PROPERTY_EXCLUSIONS = "exclusions";
  private String exclusions;

  public static final String JSON_PROPERTY_EXCLUSION_DETAILS = "exclusionDetails";
  private String exclusionDetails;

  public static final String JSON_PROPERTY_EXCESS_AMOUNT = "excessAmount";
  private String excessAmount;

  public static final String JSON_PROPERTY_TOTAL_PREMIUM = "totalPremium";
  private String totalPremium;

  public static final String JSON_PROPERTY_GST = "gst";
  private String gst;

  public static final String JSON_PROPERTY_AGENT_NAME = "agentName";
  private String agentName;

  public static final String JSON_PROPERTY_AGENT_NUMBER = "agentNumber";
  private String agentNumber;

  public MbiQuoteRequest() { 
  }

  public MbiQuoteRequest quotationNumber(String quotationNumber) {
    this.quotationNumber = quotationNumber;
    return this;
  }

   /**
   * Unique quotation number
   * @return quotationNumber
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUOTATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getQuotationNumber() {
    return quotationNumber;
  }


  @JsonProperty(JSON_PROPERTY_QUOTATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuotationNumber(String quotationNumber) {
    this.quotationNumber = quotationNumber;
  }


  public MbiQuoteRequest quotationDate(String quotationDate) {
    this.quotationDate = quotationDate;
    return this;
  }

   /**
   * Date of the quotation
   * @return quotationDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUOTATION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getQuotationDate() {
    return quotationDate;
  }


  @JsonProperty(JSON_PROPERTY_QUOTATION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuotationDate(String quotationDate) {
    this.quotationDate = quotationDate;
  }


  public MbiQuoteRequest cover(String cover) {
    this.cover = cover;
    return this;
  }

   /**
   * Type of cover
   * @return cover
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCover() {
    return cover;
  }


  @JsonProperty(JSON_PROPERTY_COVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCover(String cover) {
    this.cover = cover;
  }


  public MbiQuoteRequest coverPeriod(String coverPeriod) {
    this.coverPeriod = coverPeriod;
    return this;
  }

   /**
   * Period of coverage
   * @return coverPeriod
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COVER_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCoverPeriod() {
    return coverPeriod;
  }


  @JsonProperty(JSON_PROPERTY_COVER_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCoverPeriod(String coverPeriod) {
    this.coverPeriod = coverPeriod;
  }


  public MbiQuoteRequest maxClaim(String maxClaim) {
    this.maxClaim = maxClaim;
    return this;
  }

   /**
   * Maximum entitlement per claim
   * @return maxClaim
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAX_CLAIM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMaxClaim() {
    return maxClaim;
  }


  @JsonProperty(JSON_PROPERTY_MAX_CLAIM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaxClaim(String maxClaim) {
    this.maxClaim = maxClaim;
  }


  public MbiQuoteRequest additionalCovers(String additionalCovers) {
    this.additionalCovers = additionalCovers;
    return this;
  }

   /**
   * Additional covers included
   * @return additionalCovers
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_COVERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAdditionalCovers() {
    return additionalCovers;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_COVERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdditionalCovers(String additionalCovers) {
    this.additionalCovers = additionalCovers;
  }


  public MbiQuoteRequest consumableItems(String consumableItems) {
    this.consumableItems = consumableItems;
    return this;
  }

   /**
   * Consumable items coverage
   * @return consumableItems
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONSUMABLE_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConsumableItems() {
    return consumableItems;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMABLE_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConsumableItems(String consumableItems) {
    this.consumableItems = consumableItems;
  }


  public MbiQuoteRequest repatriationCosts(String repatriationCosts) {
    this.repatriationCosts = repatriationCosts;
    return this;
  }

   /**
   * Repatriation costs coverage
   * @return repatriationCosts
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REPATRIATION_COSTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRepatriationCosts() {
    return repatriationCosts;
  }


  @JsonProperty(JSON_PROPERTY_REPATRIATION_COSTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRepatriationCosts(String repatriationCosts) {
    this.repatriationCosts = repatriationCosts;
  }


  public MbiQuoteRequest accommodationTravel(String accommodationTravel) {
    this.accommodationTravel = accommodationTravel;
    return this;
  }

   /**
   * Accommodation and travel coverage
   * @return accommodationTravel
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOMMODATION_TRAVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccommodationTravel() {
    return accommodationTravel;
  }


  @JsonProperty(JSON_PROPERTY_ACCOMMODATION_TRAVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccommodationTravel(String accommodationTravel) {
    this.accommodationTravel = accommodationTravel;
  }


  public MbiQuoteRequest roadsideAssistance(String roadsideAssistance) {
    this.roadsideAssistance = roadsideAssistance;
    return this;
  }

   /**
   * Roadside assistance availability
   * @return roadsideAssistance
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROADSIDE_ASSISTANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRoadsideAssistance() {
    return roadsideAssistance;
  }


  @JsonProperty(JSON_PROPERTY_ROADSIDE_ASSISTANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRoadsideAssistance(String roadsideAssistance) {
    this.roadsideAssistance = roadsideAssistance;
  }


  public MbiQuoteRequest electricPackage(String electricPackage) {
    this.electricPackage = electricPackage;
    return this;
  }

   /**
   * Electric vehicle package details
   * @return electricPackage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELECTRIC_PACKAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElectricPackage() {
    return electricPackage;
  }


  @JsonProperty(JSON_PROPERTY_ELECTRIC_PACKAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElectricPackage(String electricPackage) {
    this.electricPackage = electricPackage;
  }


  public MbiQuoteRequest registration(String registration) {
    this.registration = registration;
    return this;
  }

   /**
   * Vehicle registration number
   * @return registration
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGISTRATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegistration() {
    return registration;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegistration(String registration) {
    this.registration = registration;
  }


  public MbiQuoteRequest vin(String vin) {
    this.vin = vin;
    return this;
  }

   /**
   * Vehicle Identification Number
   * @return vin
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVin() {
    return vin;
  }


  @JsonProperty(JSON_PROPERTY_VIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVin(String vin) {
    this.vin = vin;
  }


  public MbiQuoteRequest make(String make) {
    this.make = make;
    return this;
  }

   /**
   * Vehicle make
   * @return make
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAKE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMake() {
    return make;
  }


  @JsonProperty(JSON_PROPERTY_MAKE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMake(String make) {
    this.make = make;
  }


  public MbiQuoteRequest model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Vehicle model
   * @return model
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getModel() {
    return model;
  }


  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModel(String model) {
    this.model = model;
  }


  public MbiQuoteRequest variant(String variant) {
    this.variant = variant;
    return this;
  }

   /**
   * Vehicle variant
   * @return variant
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VARIANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVariant() {
    return variant;
  }


  @JsonProperty(JSON_PROPERTY_VARIANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVariant(String variant) {
    this.variant = variant;
  }


  public MbiQuoteRequest vehicleValue(String vehicleValue) {
    this.vehicleValue = vehicleValue;
    return this;
  }

   /**
   * Vehicle value
   * @return vehicleValue
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEHICLE_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVehicleValue() {
    return vehicleValue;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLE_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVehicleValue(String vehicleValue) {
    this.vehicleValue = vehicleValue;
  }


  public MbiQuoteRequest fuelType(String fuelType) {
    this.fuelType = fuelType;
    return this;
  }

   /**
   * Vehicle fuel type
   * @return fuelType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FUEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFuelType() {
    return fuelType;
  }


  @JsonProperty(JSON_PROPERTY_FUEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFuelType(String fuelType) {
    this.fuelType = fuelType;
  }


  public MbiQuoteRequest ccRating(String ccRating) {
    this.ccRating = ccRating;
    return this;
  }

   /**
   * Engine CC rating
   * @return ccRating
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CC_RATING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCcRating() {
    return ccRating;
  }


  @JsonProperty(JSON_PROPERTY_CC_RATING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCcRating(String ccRating) {
    this.ccRating = ccRating;
  }


  public MbiQuoteRequest year(String year) {
    this.year = year;
    return this;
  }

   /**
   * Year the vehicle was built
   * @return year
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getYear() {
    return year;
  }


  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setYear(String year) {
    this.year = year;
  }


  public MbiQuoteRequest odometer(String odometer) {
    this.odometer = odometer;
    return this;
  }

   /**
   * Vehicle odometer reading in kilometers
   * @return odometer
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ODOMETER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOdometer() {
    return odometer;
  }


  @JsonProperty(JSON_PROPERTY_ODOMETER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOdometer(String odometer) {
    this.odometer = odometer;
  }


  public MbiQuoteRequest modifications(String modifications) {
    this.modifications = modifications;
    return this;
  }

   /**
   * Whether the vehicle has modifications
   * @return modifications
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getModifications() {
    return modifications;
  }


  @JsonProperty(JSON_PROPERTY_MODIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModifications(String modifications) {
    this.modifications = modifications;
  }


  public MbiQuoteRequest modificationDetails(String modificationDetails) {
    this.modificationDetails = modificationDetails;
    return this;
  }

   /**
   * Details of modifications if applicable
   * @return modificationDetails
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFICATION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModificationDetails() {
    return modificationDetails;
  }


  @JsonProperty(JSON_PROPERTY_MODIFICATION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModificationDetails(String modificationDetails) {
    this.modificationDetails = modificationDetails;
  }


  public MbiQuoteRequest exclusions(String exclusions) {
    this.exclusions = exclusions;
    return this;
  }

   /**
   * Whether there are exclusions
   * @return exclusions
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXCLUSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExclusions() {
    return exclusions;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExclusions(String exclusions) {
    this.exclusions = exclusions;
  }


  public MbiQuoteRequest exclusionDetails(String exclusionDetails) {
    this.exclusionDetails = exclusionDetails;
    return this;
  }

   /**
   * Details of exclusions if applicable
   * @return exclusionDetails
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCLUSION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExclusionDetails() {
    return exclusionDetails;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUSION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExclusionDetails(String exclusionDetails) {
    this.exclusionDetails = exclusionDetails;
  }


  public MbiQuoteRequest excessAmount(String excessAmount) {
    this.excessAmount = excessAmount;
    return this;
  }

   /**
   * Excess amount per claim
   * @return excessAmount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXCESS_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExcessAmount() {
    return excessAmount;
  }


  @JsonProperty(JSON_PROPERTY_EXCESS_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExcessAmount(String excessAmount) {
    this.excessAmount = excessAmount;
  }


  public MbiQuoteRequest totalPremium(String totalPremium) {
    this.totalPremium = totalPremium;
    return this;
  }

   /**
   * Total quoted premium
   * @return totalPremium
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_PREMIUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTotalPremium() {
    return totalPremium;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PREMIUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalPremium(String totalPremium) {
    this.totalPremium = totalPremium;
  }


  public MbiQuoteRequest gst(String gst) {
    this.gst = gst;
    return this;
  }

   /**
   * GST amount included
   * @return gst
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getGst() {
    return gst;
  }


  @JsonProperty(JSON_PROPERTY_GST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGst(String gst) {
    this.gst = gst;
  }


  public MbiQuoteRequest agentName(String agentName) {
    this.agentName = agentName;
    return this;
  }

   /**
   * Name of the agent
   * @return agentName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAgentName() {
    return agentName;
  }


  @JsonProperty(JSON_PROPERTY_AGENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAgentName(String agentName) {
    this.agentName = agentName;
  }


  public MbiQuoteRequest agentNumber(String agentNumber) {
    this.agentNumber = agentNumber;
    return this;
  }

   /**
   * Agent number
   * @return agentNumber
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAgentNumber() {
    return agentNumber;
  }


  @JsonProperty(JSON_PROPERTY_AGENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAgentNumber(String agentNumber) {
    this.agentNumber = agentNumber;
  }


  /**
   * Return true if this MbiQuoteRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MbiQuoteRequest mbiQuoteRequest = (MbiQuoteRequest) o;
    return Objects.equals(this.quotationNumber, mbiQuoteRequest.quotationNumber) &&
        Objects.equals(this.quotationDate, mbiQuoteRequest.quotationDate) &&
        Objects.equals(this.cover, mbiQuoteRequest.cover) &&
        Objects.equals(this.coverPeriod, mbiQuoteRequest.coverPeriod) &&
        Objects.equals(this.maxClaim, mbiQuoteRequest.maxClaim) &&
        Objects.equals(this.additionalCovers, mbiQuoteRequest.additionalCovers) &&
        Objects.equals(this.consumableItems, mbiQuoteRequest.consumableItems) &&
        Objects.equals(this.repatriationCosts, mbiQuoteRequest.repatriationCosts) &&
        Objects.equals(this.accommodationTravel, mbiQuoteRequest.accommodationTravel) &&
        Objects.equals(this.roadsideAssistance, mbiQuoteRequest.roadsideAssistance) &&
        Objects.equals(this.electricPackage, mbiQuoteRequest.electricPackage) &&
        Objects.equals(this.registration, mbiQuoteRequest.registration) &&
        Objects.equals(this.vin, mbiQuoteRequest.vin) &&
        Objects.equals(this.make, mbiQuoteRequest.make) &&
        Objects.equals(this.model, mbiQuoteRequest.model) &&
        Objects.equals(this.variant, mbiQuoteRequest.variant) &&
        Objects.equals(this.vehicleValue, mbiQuoteRequest.vehicleValue) &&
        Objects.equals(this.fuelType, mbiQuoteRequest.fuelType) &&
        Objects.equals(this.ccRating, mbiQuoteRequest.ccRating) &&
        Objects.equals(this.year, mbiQuoteRequest.year) &&
        Objects.equals(this.odometer, mbiQuoteRequest.odometer) &&
        Objects.equals(this.modifications, mbiQuoteRequest.modifications) &&
        Objects.equals(this.modificationDetails, mbiQuoteRequest.modificationDetails) &&
        Objects.equals(this.exclusions, mbiQuoteRequest.exclusions) &&
        Objects.equals(this.exclusionDetails, mbiQuoteRequest.exclusionDetails) &&
        Objects.equals(this.excessAmount, mbiQuoteRequest.excessAmount) &&
        Objects.equals(this.totalPremium, mbiQuoteRequest.totalPremium) &&
        Objects.equals(this.gst, mbiQuoteRequest.gst) &&
        Objects.equals(this.agentName, mbiQuoteRequest.agentName) &&
        Objects.equals(this.agentNumber, mbiQuoteRequest.agentNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quotationNumber, quotationDate, cover, coverPeriod, maxClaim, additionalCovers, consumableItems, repatriationCosts, accommodationTravel, roadsideAssistance, electricPackage, registration, vin, make, model, variant, vehicleValue, fuelType, ccRating, year, odometer, modifications, modificationDetails, exclusions, exclusionDetails, excessAmount, totalPremium, gst, agentName, agentNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MbiQuoteRequest {\n");
    sb.append("    quotationNumber: ").append(toIndentedString(quotationNumber)).append("\n");
    sb.append("    quotationDate: ").append(toIndentedString(quotationDate)).append("\n");
    sb.append("    cover: ").append(toIndentedString(cover)).append("\n");
    sb.append("    coverPeriod: ").append(toIndentedString(coverPeriod)).append("\n");
    sb.append("    maxClaim: ").append(toIndentedString(maxClaim)).append("\n");
    sb.append("    additionalCovers: ").append(toIndentedString(additionalCovers)).append("\n");
    sb.append("    consumableItems: ").append(toIndentedString(consumableItems)).append("\n");
    sb.append("    repatriationCosts: ").append(toIndentedString(repatriationCosts)).append("\n");
    sb.append("    accommodationTravel: ").append(toIndentedString(accommodationTravel)).append("\n");
    sb.append("    roadsideAssistance: ").append(toIndentedString(roadsideAssistance)).append("\n");
    sb.append("    electricPackage: ").append(toIndentedString(electricPackage)).append("\n");
    sb.append("    registration: ").append(toIndentedString(registration)).append("\n");
    sb.append("    vin: ").append(toIndentedString(vin)).append("\n");
    sb.append("    make: ").append(toIndentedString(make)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    variant: ").append(toIndentedString(variant)).append("\n");
    sb.append("    vehicleValue: ").append(toIndentedString(vehicleValue)).append("\n");
    sb.append("    fuelType: ").append(toIndentedString(fuelType)).append("\n");
    sb.append("    ccRating: ").append(toIndentedString(ccRating)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    odometer: ").append(toIndentedString(odometer)).append("\n");
    sb.append("    modifications: ").append(toIndentedString(modifications)).append("\n");
    sb.append("    modificationDetails: ").append(toIndentedString(modificationDetails)).append("\n");
    sb.append("    exclusions: ").append(toIndentedString(exclusions)).append("\n");
    sb.append("    exclusionDetails: ").append(toIndentedString(exclusionDetails)).append("\n");
    sb.append("    excessAmount: ").append(toIndentedString(excessAmount)).append("\n");
    sb.append("    totalPremium: ").append(toIndentedString(totalPremium)).append("\n");
    sb.append("    gst: ").append(toIndentedString(gst)).append("\n");
    sb.append("    agentName: ").append(toIndentedString(agentName)).append("\n");
    sb.append("    agentNumber: ").append(toIndentedString(agentNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `quotationNumber` to the URL query string
    if (getQuotationNumber() != null) {
      joiner.add(String.format("%squotationNumber%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getQuotationNumber()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `quotationDate` to the URL query string
    if (getQuotationDate() != null) {
      joiner.add(String.format("%squotationDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getQuotationDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cover` to the URL query string
    if (getCover() != null) {
      joiner.add(String.format("%scover%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCover()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `coverPeriod` to the URL query string
    if (getCoverPeriod() != null) {
      joiner.add(String.format("%scoverPeriod%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCoverPeriod()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `maxClaim` to the URL query string
    if (getMaxClaim() != null) {
      joiner.add(String.format("%smaxClaim%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMaxClaim()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `additionalCovers` to the URL query string
    if (getAdditionalCovers() != null) {
      joiner.add(String.format("%sadditionalCovers%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAdditionalCovers()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `consumableItems` to the URL query string
    if (getConsumableItems() != null) {
      joiner.add(String.format("%sconsumableItems%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getConsumableItems()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `repatriationCosts` to the URL query string
    if (getRepatriationCosts() != null) {
      joiner.add(String.format("%srepatriationCosts%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRepatriationCosts()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `accommodationTravel` to the URL query string
    if (getAccommodationTravel() != null) {
      joiner.add(String.format("%saccommodationTravel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAccommodationTravel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `roadsideAssistance` to the URL query string
    if (getRoadsideAssistance() != null) {
      joiner.add(String.format("%sroadsideAssistance%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRoadsideAssistance()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `electricPackage` to the URL query string
    if (getElectricPackage() != null) {
      joiner.add(String.format("%selectricPackage%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getElectricPackage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `registration` to the URL query string
    if (getRegistration() != null) {
      joiner.add(String.format("%sregistration%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRegistration()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `vin` to the URL query string
    if (getVin() != null) {
      joiner.add(String.format("%svin%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVin()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `make` to the URL query string
    if (getMake() != null) {
      joiner.add(String.format("%smake%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMake()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `model` to the URL query string
    if (getModel() != null) {
      joiner.add(String.format("%smodel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getModel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `variant` to the URL query string
    if (getVariant() != null) {
      joiner.add(String.format("%svariant%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVariant()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `vehicleValue` to the URL query string
    if (getVehicleValue() != null) {
      joiner.add(String.format("%svehicleValue%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVehicleValue()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `fuelType` to the URL query string
    if (getFuelType() != null) {
      joiner.add(String.format("%sfuelType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFuelType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ccRating` to the URL query string
    if (getCcRating() != null) {
      joiner.add(String.format("%sccRating%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCcRating()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `year` to the URL query string
    if (getYear() != null) {
      joiner.add(String.format("%syear%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getYear()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `odometer` to the URL query string
    if (getOdometer() != null) {
      joiner.add(String.format("%sodometer%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOdometer()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `modifications` to the URL query string
    if (getModifications() != null) {
      joiner.add(String.format("%smodifications%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getModifications()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `modificationDetails` to the URL query string
    if (getModificationDetails() != null) {
      joiner.add(String.format("%smodificationDetails%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getModificationDetails()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `exclusions` to the URL query string
    if (getExclusions() != null) {
      joiner.add(String.format("%sexclusions%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getExclusions()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `exclusionDetails` to the URL query string
    if (getExclusionDetails() != null) {
      joiner.add(String.format("%sexclusionDetails%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getExclusionDetails()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `excessAmount` to the URL query string
    if (getExcessAmount() != null) {
      joiner.add(String.format("%sexcessAmount%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getExcessAmount()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `totalPremium` to the URL query string
    if (getTotalPremium() != null) {
      joiner.add(String.format("%stotalPremium%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTotalPremium()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `gst` to the URL query string
    if (getGst() != null) {
      joiner.add(String.format("%sgst%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGst()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `agentName` to the URL query string
    if (getAgentName() != null) {
      joiner.add(String.format("%sagentName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAgentName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `agentNumber` to the URL query string
    if (getAgentNumber() != null) {
      joiner.add(String.format("%sagentNumber%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAgentNumber()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

